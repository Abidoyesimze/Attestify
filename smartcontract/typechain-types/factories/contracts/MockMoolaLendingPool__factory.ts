/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  MockMoolaLendingPool,
  MockMoolaLendingPoolInterface,
} from "../../contracts/MockMoolaLendingPool";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "onBehalfOf",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "referralCode",
        type: "uint16",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "onBehalfOf",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "referralCode",
        type: "uint16",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "deposits",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "mTokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "underlying",
        type: "address",
      },
      {
        internalType: "address",
        name: "mToken",
        type: "address",
      },
    ],
    name: "setMToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "withdrawn",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5033600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100845760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161007b919061019e565b60405180910390fd5b6100938161009960201b60201c565b506101b9565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101888261015d565b9050919050565b6101988161017d565b82525050565b60006020820190506101b3600083018461018f565b92915050565b610d9d806101c86000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063c084b10b11610066578063c084b10b14610120578063e8eda9df14610150578063f13f38411461016c578063f2fde38b14610188578063fc7e286d146101a457610093565b806369328dec14610098578063715018a6146100c85780638da5cb5b146100d2578063a9f93d5a146100f0575b600080fd5b6100b260048036038101906100ad91906109d5565b6101d4565b6040516100bf9190610a37565b60405180910390f35b6100d0610391565b005b6100da6103a5565b6040516100e79190610a61565b60405180910390f35b61010a60048036038101906101059190610a7c565b6103ce565b6040516101179190610a61565b60405180910390f35b61013a60048036038101906101359190610a7c565b610401565b6040516101479190610a37565b60405180910390f35b61016a60048036038101906101659190610ae3565b61044a565b005b61018660048036038101906101819190610b4a565b6106c1565b005b6101a2600480360381019061019d9190610a7c565b61074b565b005b6101be60048036038101906101b99190610a7c565b6107d1565b6040516101cb9190610a37565b60405180910390f35b60008073ffffffffffffffffffffffffffffffffffffffff16600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036102a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029a90610be7565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83856040518363ffffffff1660e01b81526004016102de929190610c07565b6020604051808303816000875af11580156102fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103219190610c68565b508290508173ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f56c54ba9bd38d8fd62012e42c7ee564519b09763c426d331b3661b537ead19b2856040516103829190610a37565b60405180910390a39392505050565b6103996107e9565b6103a36000610870565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60016020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600073ffffffffffffffffffffffffffffffffffffffff16600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610518576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050f90610be7565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b815260040161055593929190610c95565b6020604051808303816000875af1158015610574573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105989190610c68565b506000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905083600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461064c9190610cfb565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f42270714c8e080cf3fc90c2bf81c4756c5628788e72f50e6d7ba59396eae83b686856040516106b2929190610d3e565b60405180910390a35050505050565b6106c96107e9565b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6107536107e9565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107c55760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016107bc9190610a61565b60405180910390fd5b6107ce81610870565b50565b60026020528060005260406000206000915090505481565b6107f1610934565b73ffffffffffffffffffffffffffffffffffffffff1661080f6103a5565b73ffffffffffffffffffffffffffffffffffffffff161461086e57610832610934565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016108659190610a61565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061096c82610941565b9050919050565b61097c81610961565b811461098757600080fd5b50565b60008135905061099981610973565b92915050565b6000819050919050565b6109b28161099f565b81146109bd57600080fd5b50565b6000813590506109cf816109a9565b92915050565b6000806000606084860312156109ee576109ed61093c565b5b60006109fc8682870161098a565b9350506020610a0d868287016109c0565b9250506040610a1e8682870161098a565b9150509250925092565b610a318161099f565b82525050565b6000602082019050610a4c6000830184610a28565b92915050565b610a5b81610961565b82525050565b6000602082019050610a766000830184610a52565b92915050565b600060208284031215610a9257610a9161093c565b5b6000610aa08482850161098a565b91505092915050565b600061ffff82169050919050565b610ac081610aa9565b8114610acb57600080fd5b50565b600081359050610add81610ab7565b92915050565b60008060008060808587031215610afd57610afc61093c565b5b6000610b0b8782880161098a565b9450506020610b1c878288016109c0565b9350506040610b2d8782880161098a565b9250506060610b3e87828801610ace565b91505092959194509250565b60008060408385031215610b6157610b6061093c565b5b6000610b6f8582860161098a565b9250506020610b808582860161098a565b9150509250929050565b600082825260208201905092915050565b7f4d546f6b656e206e6f7420736574000000000000000000000000000000000000600082015250565b6000610bd1600e83610b8a565b9150610bdc82610b9b565b602082019050919050565b60006020820190508181036000830152610c0081610bc4565b9050919050565b6000604082019050610c1c6000830185610a52565b610c296020830184610a28565b9392505050565b60008115159050919050565b610c4581610c30565b8114610c5057600080fd5b50565b600081519050610c6281610c3c565b92915050565b600060208284031215610c7e57610c7d61093c565b5b6000610c8c84828501610c53565b91505092915050565b6000606082019050610caa6000830186610a52565b610cb76020830185610a52565b610cc46040830184610a28565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d068261099f565b9150610d118361099f565b9250828201905080821115610d2957610d28610ccc565b5b92915050565b610d3881610aa9565b82525050565b6000604082019050610d536000830185610a28565b610d606020830184610d2f565b939250505056fea264697066735822122093dde7e2fe45b81c372e04d278375b78384684dbaa77a59f540eec91249852cf64736f6c634300081c0033";

type MockMoolaLendingPoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockMoolaLendingPoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockMoolaLendingPool__factory extends ContractFactory {
  constructor(...args: MockMoolaLendingPoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockMoolaLendingPool & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): MockMoolaLendingPool__factory {
    return super.connect(runner) as MockMoolaLendingPool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockMoolaLendingPoolInterface {
    return new Interface(_abi) as MockMoolaLendingPoolInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockMoolaLendingPool {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as MockMoolaLendingPool;
  }
}
