/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  MockSelfProtocol,
  MockSelfProtocolInterface,
} from "../../contracts/MockSelfProtocol";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "isVerified",
    outputs: [
      {
        internalType: "bool",
        name: "verifiedStatus",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "setValidProof",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "validProofs",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "verifiedUsers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "isValid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "verifyUser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "verifyUserWithProof",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600e575f5ffd5b503380603357604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b603a81603f565b50608e565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6105c18061009b5f395ff3fe608060405234801561000f575f5ffd5b506004361061009b575f3560e01c8063b07d814d11610063578063b07d814d14610111578063b9209e331461013f578063bd0085901461016a578063e35fe3661461017d578063f2fde38b1461019f575f5ffd5b8063108044651461009f5780634d813120146100b4578063715018a6146100c75780638da5cb5b146100cf5780638e760afe146100ee575b5f5ffd5b6100b26100ad3660046103ec565b6101b2565b005b6100b26100c2366004610446565b6101f2565b6100b2610220565b5f546040516001600160a01b0390911681526020015b60405180910390f35b6101016100fc3660046103ec565b610233565b60405190151581526020016100e5565b61010161011f36600461047a565b805160208183018101805160028252928201919093012091525460ff1681565b61010161014d366004610446565b6001600160a01b03165f9081526001602052604090205460ff1690565b6100b261017836600461052d565b610261565b61010161018b366004610446565b60016020525f908152604090205460ff1681565b6100b26101ad366004610446565b6102ef565b6101ba61032c565b6001600283836040516101ce92919061057c565b908152604051908190036020019020805491151560ff199092169190911790555050565b6101fa61032c565b6001600160a01b03165f908152600160208190526040909120805460ff19169091179055565b61022861032c565b6102315f610358565b565b5f6002838360405161024692919061057c565b9081526040519081900360200190205460ff16905092915050565b6002828260405161027392919061057c565b9081526040519081900360200190205460ff166102c75760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b210383937b7b360991b60448201526064015b60405180910390fd5b50506001600160a01b03165f908152600160208190526040909120805460ff19169091179055565b6102f761032c565b6001600160a01b03811661032057604051631e4fbdf760e01b81525f60048201526024016102be565b61032981610358565b50565b5f546001600160a01b031633146102315760405163118cdaa760e01b81523360048201526024016102be565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f5f83601f8401126103b7575f5ffd5b50813567ffffffffffffffff8111156103ce575f5ffd5b6020830191508360208285010111156103e5575f5ffd5b9250929050565b5f5f602083850312156103fd575f5ffd5b823567ffffffffffffffff811115610413575f5ffd5b61041f858286016103a7565b90969095509350505050565b80356001600160a01b0381168114610441575f5ffd5b919050565b5f60208284031215610456575f5ffd5b61045f8261042b565b9392505050565b634e487b7160e01b5f52604160045260245ffd5b5f6020828403121561048a575f5ffd5b813567ffffffffffffffff8111156104a0575f5ffd5b8201601f810184136104b0575f5ffd5b803567ffffffffffffffff8111156104ca576104ca610466565b604051601f8201601f19908116603f0116810167ffffffffffffffff811182821017156104f9576104f9610466565b604052818152828201602001861015610510575f5ffd5b816020840160208301375f91810160200191909152949350505050565b5f5f5f6040848603121561053f575f5ffd5b6105488461042b565b9250602084013567ffffffffffffffff811115610563575f5ffd5b61056f868287016103a7565b9497909650939450505050565b818382375f910190815291905056fea2646970667358221220ce1d885e63c9f5fcdc8ecda690b838fba7683be11d86826248ac33b4ef51e4d864736f6c634300081c0033";

type MockSelfProtocolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockSelfProtocolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockSelfProtocol__factory extends ContractFactory {
  constructor(...args: MockSelfProtocolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockSelfProtocol & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockSelfProtocol__factory {
    return super.connect(runner) as MockSelfProtocol__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockSelfProtocolInterface {
    return new Interface(_abi) as MockSelfProtocolInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockSelfProtocol {
    return new Contract(address, _abi, runner) as unknown as MockSelfProtocol;
  }
}
