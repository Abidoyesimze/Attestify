/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MockAToken,
  MockATokenInterface,
} from "../../../contracts/MockAave.sol/MockAToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_underlyingAsset",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "UNDERLYING_ASSET_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "scaledBalanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
    ],
    name: "setPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561000f575f5ffd5b50604051610dc1380380610dc183398101604081905261002e91610185565b338282600361003d838261028b565b50600461004a828261028b565b5050506001600160a01b03811661007a57604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b61008381610097565b5050506001600160a01b0316608052610345565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f83011261010b575f5ffd5b81516001600160401b03811115610124576101246100e8565b604051601f8201601f19908116603f011681016001600160401b0381118282101715610152576101526100e8565b604052818152838201602001851015610169575f5ffd5b8160208501602083015e5f918101602001919091529392505050565b5f5f5f60608486031215610197575f5ffd5b83516001600160a01b03811681146101ad575f5ffd5b60208501519093506001600160401b038111156101c8575f5ffd5b6101d4868287016100fc565b604086015190935090506001600160401b038111156101f1575f5ffd5b6101fd868287016100fc565b9150509250925092565b600181811c9082168061021b57607f821691505b60208210810361023957634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561028657805f5260205f20601f840160051c810160208510156102645750805b601f840160051c820191505b81811015610283575f8155600101610270565b50505b505050565b81516001600160401b038111156102a4576102a46100e8565b6102b8816102b28454610207565b8461023f565b6020601f8211600181146102ea575f83156102d35750848201515b5f19600385901b1c1916600184901b178455610283565b5f84815260208120601f198516915b8281101561031957878501518255602094850194600190920191016102f9565b508482101561033657868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b608051610a6461035d5f395f6102640152610a645ff3fe608060405234801561000f575f5ffd5b5060043610610111575f3560e01c806370a082311161009e5780639dc29fac1161006e5780639dc29fac14610239578063a9059cbb1461024c578063b16a19de1461025f578063dd62ed3e14610286578063f2fde38b146102be575f5ffd5b806370a08231146101f0578063715018a6146102185780638da5cb5b1461022057806395d89b4114610231575f5ffd5b80631da24f3e116100e45780631da24f3e1461019357806323b872dd146101a6578063313ce567146101b957806340c10f19146101c85780634437152a146101dd575f5ffd5b806306fdde0314610115578063095ea7b31461013357806316f0115b1461015657806318160ddd14610181575b5f5ffd5b61011d6102d1565b60405161012a91906108d4565b60405180910390f35b610146610141366004610924565b610361565b604051901515815260200161012a565b600654610169906001600160a01b031681565b6040516001600160a01b03909116815260200161012a565b6002545b60405190815260200161012a565b6101856101a136600461094c565b61037a565b6101466101b436600461096c565b610397565b6040516012815260200161012a565b6101db6101d6366004610924565b6103ba565b005b6101db6101eb36600461094c565b61041c565b6101856101fe36600461094c565b6001600160a01b03165f9081526020819052604090205490565b6101db610446565b6005546001600160a01b0316610169565b61011d610459565b6101db610247366004610924565b610468565b61014661025a366004610924565b6104c1565b6101697f000000000000000000000000000000000000000000000000000000000000000081565b6101856102943660046109a6565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6101db6102cc36600461094c565b6104ce565b6060600380546102e0906109d7565b80601f016020809104026020016040519081016040528092919081815260200182805461030c906109d7565b80156103575780601f1061032e57610100808354040283529160200191610357565b820191905f5260205f20905b81548152906001019060200180831161033a57829003601f168201915b5050505050905090565b5f3361036e81858561050b565b60019150505b92915050565b6001600160a01b0381165f90815260208190526040812054610374565b5f336103a485828561051d565b6103af858585610599565b506001949350505050565b6006546001600160a01b0316331461040e5760405162461bcd60e51b815260206004820152601260248201527113db9b1e481c1bdbdb0818d85b881b5a5b9d60721b60448201526064015b60405180910390fd5b61041882826105f6565b5050565b61042461062a565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b61044e61062a565b6104575f610657565b565b6060600480546102e0906109d7565b6006546001600160a01b031633146104b75760405162461bcd60e51b815260206004820152601260248201527127b7363c903837b7b61031b0b710313ab93760711b6044820152606401610405565b61041882826106a8565b5f3361036e818585610599565b6104d661062a565b6001600160a01b0381166104ff57604051631e4fbdf760e01b81525f6004820152602401610405565b61050881610657565b50565b61051883838360016106dc565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f19811015610593578181101561058557604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610405565b61059384848484035f6106dc565b50505050565b6001600160a01b0383166105c257604051634b637e8f60e11b81525f6004820152602401610405565b6001600160a01b0382166105eb5760405163ec442f0560e01b81525f6004820152602401610405565b6105188383836107ae565b6001600160a01b03821661061f5760405163ec442f0560e01b81525f6004820152602401610405565b6104185f83836107ae565b6005546001600160a01b031633146104575760405163118cdaa760e01b8152336004820152602401610405565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b0382166106d157604051634b637e8f60e11b81525f6004820152602401610405565b610418825f836107ae565b6001600160a01b0384166107055760405163e602df0560e01b81525f6004820152602401610405565b6001600160a01b03831661072e57604051634a1406b160e11b81525f6004820152602401610405565b6001600160a01b038085165f908152600160209081526040808320938716835292905220829055801561059357826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516107a091815260200190565b60405180910390a350505050565b6001600160a01b0383166107d8578060025f8282546107cd9190610a0f565b909155506108489050565b6001600160a01b0383165f908152602081905260409020548181101561082a5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610405565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b03821661086457600280548290039055610882565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516108c791815260200190565b60405180910390a3505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b038116811461091f575f5ffd5b919050565b5f5f60408385031215610935575f5ffd5b61093e83610909565b946020939093013593505050565b5f6020828403121561095c575f5ffd5b61096582610909565b9392505050565b5f5f5f6060848603121561097e575f5ffd5b61098784610909565b925061099560208501610909565b929592945050506040919091013590565b5f5f604083850312156109b7575f5ffd5b6109c083610909565b91506109ce60208401610909565b90509250929050565b600181811c908216806109eb57607f821691505b602082108103610a0957634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561037457634e487b7160e01b5f52601160045260245ffdfea26469706673582212201f5f35aad77bfa5f75920af8728c69291f8ecca5a44ffce7083994da9af51af764736f6c634300081c0033";

type MockATokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockATokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockAToken__factory extends ContractFactory {
  constructor(...args: MockATokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _underlyingAsset: AddressLike,
    name: string,
    symbol: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _underlyingAsset,
      name,
      symbol,
      overrides || {}
    );
  }
  override deploy(
    _underlyingAsset: AddressLike,
    name: string,
    symbol: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _underlyingAsset,
      name,
      symbol,
      overrides || {}
    ) as Promise<
      MockAToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockAToken__factory {
    return super.connect(runner) as MockAToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockATokenInterface {
    return new Interface(_abi) as MockATokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MockAToken {
    return new Contract(address, _abi, runner) as unknown as MockAToken;
  }
}
