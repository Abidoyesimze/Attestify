/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MockAavePool,
  MockAavePoolInterface,
} from "../../../contracts/MockAave.sol/MockAavePool";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Supply",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "aTokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getUserAccountData",
    outputs: [
      {
        internalType: "uint256",
        name: "totalCollateralBase",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalDebtBase",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "availableBorrowsBase",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentLiquidationThreshold",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "ltv",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "healthFactor",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "address",
        name: "aToken",
        type: "address",
      },
    ],
    name: "setAToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "onBehalfOf",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    name: "supply",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600e575f5ffd5b503380603357604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b603a81603f565b50608e565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6106f98061009b5f395ff3fe608060405234801561000f575f5ffd5b5060043610610085575f3560e01c80638da5cb5b116100585780638da5cb5b1461010c578063a1e26f4b1461011c578063bf92857c1461012f578063f2fde38b1461017e575f5ffd5b80633e108ad914610089578063617ba037146100ce57806369328dec146100e3578063715018a614610104575b5f5ffd5b6100b16100973660046105c8565b60016020525f90815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100e16100dc3660046105e8565b610191565b005b6100f66100f136600461063a565b610329565b6040519081526020016100c5565b6100e16104ad565b5f546001600160a01b03166100b1565b6100e161012a366004610673565b6104c0565b61015161013d3660046105c8565b5f8080611f40611d4c5f1991939550919395565b604080519687526020870195909552938501929092526060840152608083015260a082015260c0016100c5565b6100e161018c3660046105c8565b6104f5565b6001600160a01b038481165f90815260016020526040902054166101f25760405162461bcd60e51b8152602060048201526013602482015272105cdcd95d081b9bdd081cdd5c1c1bdc9d1959606a1b60448201526064015b60405180910390fd5b6040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b038516906323b872dd906064016020604051808303815f875af1158015610242573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061026691906106a4565b506001600160a01b038481165f90815260016020526040908190205490516340c10f1960e01b81528483166004820152602481018690529116906340c10f19906044015f604051808303815f87803b1580156102c0575f5ffd5b505af11580156102d2573d5f5f3e3d5ffd5b50505050816001600160a01b0316846001600160a01b03167fd1cf3d156d5f8f0d50f6c122ed609cec09d35c9b9fb3fff6ea0959134dae424e8560405161031b91815260200190565b60405180910390a350505050565b6001600160a01b038381165f908152600160205260408120549091166103875760405162461bcd60e51b8152602060048201526013602482015272105cdcd95d081b9bdd081cdd5c1c1bdc9d1959606a1b60448201526064016101e9565b6001600160a01b038481165f9081526001602052604090819020549051632770a7eb60e21b815233600482015260248101869052911690639dc29fac906044015f604051808303815f87803b1580156103de575f5ffd5b505af11580156103f0573d5f5f3e3d5ffd5b505060405163a9059cbb60e01b81526001600160a01b038581166004830152602482018790528716925063a9059cbb91506044016020604051808303815f875af1158015610440573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061046491906106a4565b5060405183815233906001600160a01b038616907f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb9060200160405180910390a3509092915050565b6104b5610532565b6104be5f61055e565b565b6104c8610532565b6001600160a01b039182165f90815260016020526040902080546001600160a01b03191691909216179055565b6104fd610532565b6001600160a01b03811661052657604051631e4fbdf760e01b81525f60048201526024016101e9565b61052f8161055e565b50565b5f546001600160a01b031633146104be5760405163118cdaa760e01b81523360048201526024016101e9565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146105c3575f5ffd5b919050565b5f602082840312156105d8575f5ffd5b6105e1826105ad565b9392505050565b5f5f5f5f608085870312156105fb575f5ffd5b610604856105ad565b935060208501359250610619604086016105ad565b9150606085013561ffff8116811461062f575f5ffd5b939692955090935050565b5f5f5f6060848603121561064c575f5ffd5b610655846105ad565b92506020840135915061066a604085016105ad565b90509250925092565b5f5f60408385031215610684575f5ffd5b61068d836105ad565b915061069b602084016105ad565b90509250929050565b5f602082840312156106b4575f5ffd5b815180151581146105e1575f5ffdfea2646970667358221220ee1d46c403de0fade9b6a4fbc6a42383fb121789ce9cf33b84cfe07e1e8bf07b64736f6c634300081c0033";

type MockAavePoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockAavePoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockAavePool__factory extends ContractFactory {
  constructor(...args: MockAavePoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockAavePool & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockAavePool__factory {
    return super.connect(runner) as MockAavePool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockAavePoolInterface {
    return new Interface(_abi) as MockAavePoolInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockAavePool {
    return new Contract(address, _abi, runner) as unknown as MockAavePool;
  }
}
