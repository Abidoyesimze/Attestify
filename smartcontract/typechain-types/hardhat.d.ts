/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  DeployContractOptions,
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomicfoundation/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "IERC1155Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Errors__factory>;
    getContractFactory(
      name: "IERC20Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Errors__factory>;
    getContractFactory(
      name: "IERC721Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Errors__factory>;
    getContractFactory(
      name: "IERC1363",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1363__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "SafeERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeERC20__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "Pausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Pausable__factory>;
    getContractFactory(
      name: "ReentrancyGuard",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReentrancyGuard__factory>;
    getContractFactory(
      name: "SelfVerificationRoot",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SelfVerificationRoot__factory>;
    getContractFactory(
      name: "IDscCircuitVerifier",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDscCircuitVerifier__factory>;
    getContractFactory(
      name: "IIdentityVerificationHubV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IIdentityVerificationHubV2__factory>;
    getContractFactory(
      name: "IPoseidonT3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPoseidonT3__factory>;
    getContractFactory(
      name: "IAadhaarRegisterCircuitVerifier",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAadhaarRegisterCircuitVerifier__factory>;
    getContractFactory(
      name: "IRegisterCircuitVerifier",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRegisterCircuitVerifier__factory>;
    getContractFactory(
      name: "ISelfVerificationRoot",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISelfVerificationRoot__factory>;
    getContractFactory(
      name: "Formatter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Formatter__factory>;
    getContractFactory(
      name: "AttestifyVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AttestifyVault__factory>;
    getContractFactory(
      name: "IMoolaLendingPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMoolaLendingPool__factory>;
    getContractFactory(
      name: "IMToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMToken__factory>;
    getContractFactory(
      name: "MoolaAddresses",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MoolaAddresses__factory>;
    getContractFactory(
      name: "ISelfProtocol",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISelfProtocol__factory>;
    getContractFactory(
      name: "MockMoolaLendingPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockMoolaLendingPool__factory>;
    getContractFactory(
      name: "MockSelfProtocol",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockSelfProtocol__factory>;
    getContractFactory(
      name: "MockToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockToken__factory>;

    getContractAt(
      name: "Ownable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "IERC1155Errors",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Errors>;
    getContractAt(
      name: "IERC20Errors",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Errors>;
    getContractAt(
      name: "IERC721Errors",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Errors>;
    getContractAt(
      name: "IERC1363",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1363>;
    getContractAt(
      name: "ERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "IERC20Metadata",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "SafeERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeERC20>;
    getContractAt(
      name: "IERC165",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "Pausable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Pausable>;
    getContractAt(
      name: "ReentrancyGuard",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ReentrancyGuard>;
    getContractAt(
      name: "SelfVerificationRoot",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SelfVerificationRoot>;
    getContractAt(
      name: "IDscCircuitVerifier",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IDscCircuitVerifier>;
    getContractAt(
      name: "IIdentityVerificationHubV2",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IIdentityVerificationHubV2>;
    getContractAt(
      name: "IPoseidonT3",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPoseidonT3>;
    getContractAt(
      name: "IAadhaarRegisterCircuitVerifier",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IAadhaarRegisterCircuitVerifier>;
    getContractAt(
      name: "IRegisterCircuitVerifier",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IRegisterCircuitVerifier>;
    getContractAt(
      name: "ISelfVerificationRoot",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ISelfVerificationRoot>;
    getContractAt(
      name: "Formatter",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Formatter>;
    getContractAt(
      name: "AttestifyVault",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AttestifyVault>;
    getContractAt(
      name: "IMoolaLendingPool",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IMoolaLendingPool>;
    getContractAt(
      name: "IMToken",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IMToken>;
    getContractAt(
      name: "MoolaAddresses",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MoolaAddresses>;
    getContractAt(
      name: "ISelfProtocol",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ISelfProtocol>;
    getContractAt(
      name: "MockMoolaLendingPool",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MockMoolaLendingPool>;
    getContractAt(
      name: "MockSelfProtocol",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MockSelfProtocol>;
    getContractAt(
      name: "MockToken",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MockToken>;

    deployContract(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "IERC1155Errors",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Errors>;
    deployContract(
      name: "IERC20Errors",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Errors>;
    deployContract(
      name: "IERC721Errors",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Errors>;
    deployContract(
      name: "IERC1363",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1363>;
    deployContract(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20>;
    deployContract(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Metadata>;
    deployContract(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "SafeERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SafeERC20>;
    deployContract(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165>;
    deployContract(
      name: "Pausable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Pausable>;
    deployContract(
      name: "ReentrancyGuard",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ReentrancyGuard>;
    deployContract(
      name: "SelfVerificationRoot",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SelfVerificationRoot>;
    deployContract(
      name: "IDscCircuitVerifier",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDscCircuitVerifier>;
    deployContract(
      name: "IIdentityVerificationHubV2",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IIdentityVerificationHubV2>;
    deployContract(
      name: "IPoseidonT3",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPoseidonT3>;
    deployContract(
      name: "IAadhaarRegisterCircuitVerifier",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAadhaarRegisterCircuitVerifier>;
    deployContract(
      name: "IRegisterCircuitVerifier",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRegisterCircuitVerifier>;
    deployContract(
      name: "ISelfVerificationRoot",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ISelfVerificationRoot>;
    deployContract(
      name: "Formatter",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Formatter>;
    deployContract(
      name: "AttestifyVault",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AttestifyVault>;
    deployContract(
      name: "IMoolaLendingPool",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMoolaLendingPool>;
    deployContract(
      name: "IMToken",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMToken>;
    deployContract(
      name: "MoolaAddresses",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MoolaAddresses>;
    deployContract(
      name: "ISelfProtocol",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ISelfProtocol>;
    deployContract(
      name: "MockMoolaLendingPool",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MockMoolaLendingPool>;
    deployContract(
      name: "MockSelfProtocol",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MockSelfProtocol>;
    deployContract(
      name: "MockToken",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MockToken>;

    deployContract(
      name: "Ownable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "IERC1155Errors",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Errors>;
    deployContract(
      name: "IERC20Errors",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Errors>;
    deployContract(
      name: "IERC721Errors",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Errors>;
    deployContract(
      name: "IERC1363",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1363>;
    deployContract(
      name: "ERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20>;
    deployContract(
      name: "IERC20Metadata",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Metadata>;
    deployContract(
      name: "IERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "SafeERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SafeERC20>;
    deployContract(
      name: "IERC165",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165>;
    deployContract(
      name: "Pausable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Pausable>;
    deployContract(
      name: "ReentrancyGuard",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ReentrancyGuard>;
    deployContract(
      name: "SelfVerificationRoot",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SelfVerificationRoot>;
    deployContract(
      name: "IDscCircuitVerifier",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDscCircuitVerifier>;
    deployContract(
      name: "IIdentityVerificationHubV2",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IIdentityVerificationHubV2>;
    deployContract(
      name: "IPoseidonT3",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPoseidonT3>;
    deployContract(
      name: "IAadhaarRegisterCircuitVerifier",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IAadhaarRegisterCircuitVerifier>;
    deployContract(
      name: "IRegisterCircuitVerifier",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRegisterCircuitVerifier>;
    deployContract(
      name: "ISelfVerificationRoot",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ISelfVerificationRoot>;
    deployContract(
      name: "Formatter",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Formatter>;
    deployContract(
      name: "AttestifyVault",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.AttestifyVault>;
    deployContract(
      name: "IMoolaLendingPool",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMoolaLendingPool>;
    deployContract(
      name: "IMToken",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IMToken>;
    deployContract(
      name: "MoolaAddresses",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MoolaAddresses>;
    deployContract(
      name: "ISelfProtocol",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ISelfProtocol>;
    deployContract(
      name: "MockMoolaLendingPool",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MockMoolaLendingPool>;
    deployContract(
      name: "MockSelfProtocol",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MockSelfProtocol>;
    deployContract(
      name: "MockToken",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MockToken>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
  }
}
